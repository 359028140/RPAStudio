<UserControl x:Class="RPAStudio.UserControls.MainContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RPAStudio"
             xmlns:lclz="clr-namespace:RPAStudio.Localization"
             xmlns:uc="clr-namespace:RPAStudio.UserControls"
             xmlns:fluent= "urn:fluent-ribbon"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
             DataContext="{Binding Main, Source={StaticResource Locator}}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <fluent:Ribbon AutomaticStateManagement="True"  Visibility="{Binding IsOpenStartScreen,Mode=OneWay, Converter={StaticResource BoolNotVisibilityConverter}}">
            <fluent:Ribbon.Menu>
                <Grid>
                    <!--开始-->
                    <fluent:Backstage Header="{x:Static lclz:Strings.xStart}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}" IsOpen="{Binding IsOpenStartScreen,Mode=TwoWay}" CloseOnEsc="{Binding IsBackButtonVisible}" AreAnimationsEnabled="{Binding IsBackButtonVisible}" >
                        <Grid>
                            <fluent:BackstageTabControl SelectedIndex="3" IsBackButtonVisible="{Binding IsBackButtonVisible}">
                                <!--打开-->
                                <fluent:Button Header="{x:Static lclz:Strings.xOpen}" Command="{Binding SelectProjectCommand}" IsDefinitive="False" />
                                <!--关闭-->
                                <fluent:Button Header="{x:Static lclz:Strings.xClose}" Command="{Binding CloseProjectCommand}" IsDefinitive="False" />
                                <fluent:SeparatorTabItem />

                                <fluent:BackstageTabItem Header="{x:Static lclz:Strings.xStart}">
                                    <uc:StartContent/>
                                </fluent:BackstageTabItem>

                                <fluent:BackstageTabItem Header="{x:Static lclz:Strings.xSettings}">
                                    <uc:SetUpContent/>                              
                                </fluent:BackstageTabItem>
                                <fluent:BackstageTabItem >
                                    <fluent:BackstageTabItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <TextBlock x:Uid="CheckUpdates(检查更新)" Text="{Binding P_CheckUpdates}" />
                                            <Border Visibility="{Binding IsNeedUpgrade,Mode=OneWay, Converter={StaticResource BoolCollapsedConverter}}" CornerRadius="5" Width="10" Height="10" Background="Red" Margin="3,0,0,0"></Border>
                                        </StackPanel>
                                    </fluent:BackstageTabItem.Header>
                                    <uc:CheckUpgradeContent/>
                                </fluent:BackstageTabItem>
                            </fluent:BackstageTabControl>
                            
                            <!--起始页遮罩层-->
                            <Grid Visibility="{Binding IsStartContentBusy,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" Margin="0,30,0,0">
                                <Grid Background="#FFCCCCCC" Opacity="0.5" Visibility="Visible">
                                </Grid>
                                <Border BorderBrush="#ababab" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="360" Height="120" Background="White" >
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image Width="40" Height="40" gif:ImageBehavior.AnimatedSource="pack://application:,,,/Resources/Image/Ribbon/loading.gif"/>
                                        <TextBlock x:Uid="Loading" FontSize="15" Margin="0,10,0,0">正在加载……</TextBlock>
                                    </StackPanel>
                                    
                                </Border>
                            </Grid>
                        </Grid>
                        
                    </fluent:Backstage>
                </Grid>
            </fluent:Ribbon.Menu>
            <fluent:Ribbon.ToolBarItems>
                <fluent:Button x:Uid="Help" Size="Small" Icon="pack://application:,,,/Resources/Image/Ribbon/help.png" ToolTip="帮助" />
            </fluent:Ribbon.ToolBarItems>
            <fluent:Ribbon.QuickAccessItems>
                <fluent:QuickAccessMenuItem Target="{Binding Source={x:Reference saveButton}}"
                                            IsChecked="True" />
                <fluent:QuickAccessMenuItem Target="{Binding Source={x:Reference runButton}}"
                                            IsChecked="True" />
                <fluent:QuickAccessMenuItem Target="{Binding Source={x:Reference stopButton}}"
                                            IsChecked="True" />
            </fluent:Ribbon.QuickAccessItems>
            <!--设计-->
            <fluent:RibbonTabItem Header="{x:Static lclz:Strings.xDesign}">
                <!--文件-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.xFile}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}">
                    <!--新建-->
                    <fluent:DropDownButton Header="{x:Static lclz:Strings.xNew}"
                                           LargeIcon="pack://application:,,,/Resources/Image/Ribbon/new.png"
                                           IsEnabled="True"
                                           VerticalAlignment="Top">
                        <fluent:MenuItem x:Uid="SequenceDiagram(序列图)" Header="{Binding P_SequenceDiagram}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/sequence.png"
                                         Command="{Binding NewSequenceDocumentCommand}"
                                         ToolTip="{Binding P_SequenceDiagram_ToolTip}"
                                        />
                        <fluent:MenuItem x:Uid="FlowChart(流程图)" Header="{Binding P_FlowChart}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/flowchart.png"
                                         Command="{Binding NewFlowchartDocumentCommand}"
                                         ToolTip="{Binding P_FlowChart}"
                                        />
                        <fluent:MenuItem x:Uid="StateMachine(状态机)" Header="{Binding P_StateMachine}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/state-machine.png"
                                         Command="{Binding NewStateMachineDocumentCommand}"
                                         ToolTip="{Binding P_StateMachine}"
                                        />
                        <!--<fluent:MenuItem Header="全局处理器" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/global-handler.png"
                                         Command="{Binding NewGlobalHandlerDocumentCommand}"
                                         ToolTip="全局处理器"
                                        />-->
                    </fluent:DropDownButton>
                    <fluent:SplitButton x:Uid="Save(保存)" x:Name="saveButton" Header="{Binding P_Save}" ToolTip="{Binding P_Save_ToolTip}"
                                        Icon="pack://application:,,,/Resources/Image/Ribbon/save.png"
                                        LargeIcon="pack://application:,,,/Resources/Image/Ribbon/save.png"
                                        Command="{Binding SaveCommand}"
                                        IsEnabled="{Binding IsDocumentExist}"
                                        FocusManager.IsFocusScope="True">
                        <fluent:MenuItem x:Uid="SaveAs(另存为)" Header="{Binding P_SaveAs}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/save-as.png"
                                         Command="{Binding SaveAsCommand}"
                                        />
                        <fluent:MenuItem x:Uid="SaveAll(全部保存)" Header="{Binding P_SaveAll}" ToolTip="{Binding P_SaveAll_ToolTip}"
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/save-all.png"
                                         Command="{Binding SaveAllCommand}"
                                        />
                    </fluent:SplitButton>
                    <!--<fluent:Button Header="另存为 模板" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/template.png"
                                   />-->
                    <fluent:Button x:Uid="Run(运行)" Header="{Binding P_Run}"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/run.png"
                                   Command="{Binding RunWorkflowCommand}"
                                   ToolTip="{Binding P_Run_ToolTip}"
                                   />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox x:Uid="Edit(编辑)" Header="{Binding P_Edit}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}">
                    <fluent:Button x:Uid="Cut(剪切)" Header="{Binding P_Cut}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/cut.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding CutCommand}" CommandTarget="{Binding CurrentDesignerView}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <fluent:Button x:Uid="Copy(复制)" Header="{Binding P_Copy}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/copy.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding CopyCommand}" CommandTarget="{Binding CurrentDesignerView}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <fluent:Button x:Uid="Paste(粘贴)" Header="{Binding P_Paste}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/paste.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding PasteCommand}" CommandTarget="{Binding CurrentDesignerView}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                </fluent:RibbonGroupBox>
                <!--<fluent:RibbonGroupBox Header="选择器">
                    <fluent:Button Header="UI 浏览器" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/ui-explorer.png"
                                   Command="{Binding LaunchUIExplorerCommand}"
                                   ToolTip="运行UI浏览器"
                                   />
                </fluent:RibbonGroupBox>-->
                <fluent:RibbonGroupBox x:Uid="Depends(依赖)" Header="{Binding P_Depends}">
                    <fluent:Button x:Uid="PackageManager(包管理器)" Header="{Binding P_PackageManager}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/package-manager.png"
                                   Command="{Binding LaunchPackageManagerCommand}"
                                   ToolTip="{x:Static lclz:Strings.xPackageToolTip}"
                                   />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.xOperation}">
                    <!--录制-->
                    <fluent:Button Header="{x:Static lclz:Strings.xRecord}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/recording.png"
                                   Command="{Binding RecordingCommand}"
                                   ToolTip="{x:Static lclz:Strings.xRecordTip}"
                                   />
                </fluent:RibbonGroupBox>
                <!--能力中心-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.xActivityCenter}">
                    <!--能力商店-->
                    <fluent:Button Header="{x:Static lclz:Strings.xActivityStore}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/store.png"
                                   Command="{Binding StoreCommand}"
                                   ToolTip="{x:Static lclz:Strings.xOpenActivityStore}"
                                   />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox x:Uid="Deploy(部署)" Header="{Binding P_Deploy}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}">
                    <fluent:Button x:Uid="Release(发布)" Header="{Binding P_Release}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/publish.png"
                                   Command="{Binding PublishCommand}"
                                   ToolTip="{Binding P_Release_ToolTip}"
                                   />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <fluent:RibbonTabItem x:Uid="Execution(执行)" Header="{Binding P_Execution}">
                <fluent:RibbonGroupBox x:Uid="Start2(启动)" Header="{Binding P_Start2}">
                    <fluent:Button x:Uid="Run(运行)" Header="{Binding P_Run}" x:Name="runButton" 
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/run.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/run.png"
                                   Command="{Binding RunWorkflowCommand}"
                                   ToolTip="{Binding P_Run_ToolTip}"
                                   />
                    <fluent:Button x:Uid="Stop(停止)" Header="停止" x:Name="stopButton"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/stop.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/stop.png"
                                   Command="{Binding StopWorkflowCommand}"
                                   ToolTip="{Binding P_Stop_ToolTip}"
                                   />
                    <fluent:Button Header="{Binding DebugOrContinueWorkflowButtonHeader}" 
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/debug.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/debug.png"
                                   Command="{Binding DebugOrContinueWorkflowCommand}"
                                   ToolTip="{Binding DebugOrContinueWorkflowButtonToolTip}"
                                   />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox x:Uid="Debug(调试)" Header="{Binding P_Debug}" >
                    <fluent:Button x:Uid="Break(中断)" Header="{Binding P_Break}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/break.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding BreakCommand}"
                                   ToolTip="{Binding P_Break_ToolTip}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <fluent:Button x:Uid="StepInto(逐语句)" Header="{Binding P_StepInto}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/step-into.png"
                                   SizeDefinition="Middle,Small"
                                   ToolTip="{Binding P_StepInto_ToolTip}"
                                   Command="{Binding StepIntoCommand}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <fluent:Button x:Uid="StepOver(逐过程)" Header="{Binding P_StepOver}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/step-over.png"
                                   SizeDefinition="Middle,Small"
                                   ToolTip="{Binding P_StepOver_ToolTip}"
                                   Command="{Binding StepOverCommand}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <fluent:Button x:Uid="Varidate(校验)" Header="{Binding P_Varidate}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/validate.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/validate.png"
                                   ToolTip="{Binding P_Varidate_ToolTip}"
                                   Command="{Binding ValidateWorkflowCommand}"
                                   IsEnabled="{Binding IsDocumentExist}"
                                   />
                    <fluent:SplitButton x:Uid="BreakPoint(断点)" Header="{Binding P_BreakPoint}" ToolTip="{Binding P_BreakPoint_ToolTip}"
                                        Icon="pack://application:,,,/Resources/Image/Ribbon/breakpoints.png"
                                        LargeIcon="pack://application:,,,/Resources/Image/Ribbon/breakpoints.png"
                                        Command="{Binding ToggleBreakpointCommand}"
                                        IsEnabled="{Binding IsDocumentExist}"
                                        FocusManager.IsFocusScope="True">
                        <fluent:MenuItem x:Uid="BreakPoint2(切换断点)" Header="{Binding P_BreakPoint2}"  ToolTip="{Binding P_BreakPoint2_ToolTip}"
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/breakpoints.png"
                                         Command="{Binding ToggleBreakpointCommand}"
                                        />
                        <fluent:MenuItem x:Uid="CrearAllBreakPoints(清除所有断点)" Header="{Binding P_CrearAllBreakPoints}" ToolTip="{Binding P_CrearAllBreakPoints_ToolTip}"
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/remove-all-breakpoints.png"
                                         Command="{Binding RemoveAllBreakpointsCommand}"
                                        />
                    </fluent:SplitButton>

                    <fluent:Button x:Uid="SlowDebug(慢速 调试)" Header="{Binding P_SlowDebug}"  ToolTip="{Binding P_SlowDebug_ToolTip}"
                                   Icon="{Binding SlowStepIcon}"
                                   LargeIcon="{Binding SlowStepIcon}"
                                   Background="{Binding SlowStepBackground}"
                                   Command="{Binding SlowStepCommand}"
                                   IsEnabled="{Binding IsDocumentExist}"
                                   />

                    <fluent:DropDownButton x:Uid="Option(选项)" Header="{Binding P_Option}"
                                           LargeIcon="pack://application:,,,/Resources/Image/Ribbon/options.png"
                                           ToolTip="{Binding P_Option}"
                                           VerticalAlignment="Top">
                        <fluent:MenuItem x:Uid="HighlightElement(高亮元素)" Header="{Binding P_HighlightElement}" IsCheckable="True"
                                         IsChecked="{Binding IsHighlightElements}"
                                        />
                        <fluent:MenuItem x:Uid="RecordActivity(记录活动)" Header="{Binding P_RecordActivity}"  IsCheckable="True"
                                         IsChecked="{Binding IsLogActivities}"
                                        />
                        <fluent:MenuItem x:Uid="InterruptOnException(异常时中断)" Header="{Binding P_InterruptOnException}" IsCheckable="True"
                                          IsChecked="{Binding IsBreakOnExceptions}"
                                        />
                    </fluent:DropDownButton>
                </fluent:RibbonGroupBox>

                <fluent:RibbonGroupBox x:Uid="Log(日志)" Header="{Binding P_Log}">
                    <fluent:Button x:Uid="OpenLog(打开日志)" Header="{Binding P_OpenLog}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/open-logs.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/open-logs.png"
                                   ToolTip="{Binding P_OpenLog_ToolTip}"
                                   Command="{Binding OpenLogsCommand}"/>
                </fluent:RibbonGroupBox>
                
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <Grid Grid.Row="1" Visibility="{Binding IsOpenStartScreen,Mode=OneWay, Converter={StaticResource BoolNotVisibilityConverter}}">
            <uc:DockContent/>
        </Grid>
        <fluent:StatusBar HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Grid.Row="2">
        </fluent:StatusBar>
    </Grid>
</UserControl>
