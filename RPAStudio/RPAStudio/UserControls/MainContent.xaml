<UserControl x:Class="RPAStudio.UserControls.MainContent"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RPAStudio"
             xmlns:lclz="clr-namespace:RPAStudio.Localization"
             xmlns:uc="clr-namespace:RPAStudio.UserControls"
             xmlns:fluent= "urn:fluent-ribbon"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
             DataContext="{Binding Main, Source={StaticResource Locator}}"
             mc:Ignorable="d" 
             d:DesignHeight="300" d:DesignWidth="300">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>
        <fluent:Ribbon AutomaticStateManagement="True"  Visibility="{Binding IsOpenStartScreen,Mode=OneWay, Converter={StaticResource BoolNotVisibilityConverter}}">
            <fluent:Ribbon.Menu>
                <Grid>
                    <!--开始-->
                    <fluent:Backstage Header="{x:Static lclz:Strings.xStart}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}" IsOpen="{Binding IsOpenStartScreen,Mode=TwoWay}" CloseOnEsc="{Binding IsBackButtonVisible}" AreAnimationsEnabled="{Binding IsBackButtonVisible}" >
                        <Grid>
                            <fluent:BackstageTabControl SelectedIndex="3" IsBackButtonVisible="{Binding IsBackButtonVisible}">
                                <!--打开-->
                                <fluent:Button Header="{x:Static lclz:Strings.xOpen}" Command="{Binding SelectProjectCommand}" IsDefinitive="False" />
                                <!--关闭-->
                                <fluent:Button Header="{x:Static lclz:Strings.xClose}" Command="{Binding CloseProjectCommand}" IsDefinitive="False" />
                                <fluent:SeparatorTabItem />

                                <fluent:BackstageTabItem Header="{x:Static lclz:Strings.xStart}">
                                    <uc:StartContent/>
                                </fluent:BackstageTabItem>
                                <!--设置-->
                                <fluent:BackstageTabItem Header="{x:Static lclz:Strings.xSettings}">
                                    <uc:SetUpContent/>                              
                                </fluent:BackstageTabItem>
                                <fluent:BackstageTabItem >
                                    <fluent:BackstageTabItem.Header>
                                        <StackPanel Orientation="Horizontal">
                                            <!--检查更新-->
                                            <TextBlock Text="{x:Static lclz:Strings.CheckUpdates}" />
                                            <Border Visibility="{Binding IsNeedUpgrade,Mode=OneWay, Converter={StaticResource BoolCollapsedConverter}}" CornerRadius="5" Width="10" Height="10" Background="Red" Margin="3,0,0,0"></Border>
                                        </StackPanel>
                                    </fluent:BackstageTabItem.Header>
                                    <uc:CheckUpgradeContent/>
                                </fluent:BackstageTabItem>
                            </fluent:BackstageTabControl>
                            
                            <!--起始页遮罩层-->
                            <Grid Visibility="{Binding IsStartContentBusy,Mode=OneWay, Converter={StaticResource BoolVisibilityConverter}}" Margin="0,30,0,0">
                                <Grid Background="#FFCCCCCC" Opacity="0.5" Visibility="Visible">
                                </Grid>
                                <Border BorderBrush="#ababab" BorderThickness="1" HorizontalAlignment="Center" VerticalAlignment="Center" Width="360" Height="120" Background="White" >
                                    <StackPanel HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <Image Width="40" Height="40" gif:ImageBehavior.AnimatedSource="pack://application:,,,/Resources/Image/Ribbon/loading.gif"/>
                                        <!--正在加载……-->
                                        <TextBlock Text="{x:Static lclz:Strings.LoadingText}" FontSize="15" Margin="0,10,0,0"/>
                                    </StackPanel>
                                    
                                </Border>
                            </Grid>
                        </Grid>
                        
                    </fluent:Backstage>
                </Grid>
            </fluent:Ribbon.Menu>
            <fluent:Ribbon.ToolBarItems>
                <!--帮助-->
                <fluent:Button Size="Small" Icon="pack://application:,,,/Resources/Image/Ribbon/help.png" ToolTip="{x:Static lclz:Strings.HelpText}" />
            </fluent:Ribbon.ToolBarItems>
            <fluent:Ribbon.QuickAccessItems>
                <fluent:QuickAccessMenuItem Target="{Binding Source={x:Reference saveButton}}"
                                            IsChecked="True" />
                <fluent:QuickAccessMenuItem Target="{Binding Source={x:Reference runButton}}"
                                            IsChecked="True" />
                <fluent:QuickAccessMenuItem Target="{Binding Source={x:Reference stopButton}}"
                                            IsChecked="True" />
            </fluent:Ribbon.QuickAccessItems>
            <!--设计-->
            <fluent:RibbonTabItem Header="{x:Static lclz:Strings.xDesign}">
                <!--文件-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.xFile}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}">
                    <!--新建-->
                    <fluent:DropDownButton Header="{x:Static lclz:Strings.xNew}"
                                           LargeIcon="pack://application:,,,/Resources/Image/Ribbon/new.png"
                                           IsEnabled="True"
                                           VerticalAlignment="Top">
                        <!--序列图-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.SequenceText}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/sequence.png"
                                         Command="{Binding NewSequenceDocumentCommand}"
                                         ToolTip="{x:Static lclz:Strings.SequenceToolTip}"
                                        />
                        <!--流程图-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.FlowChartText}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/flowchart.png"
                                         Command="{Binding NewFlowchartDocumentCommand}"
                                         ToolTip="{x:Static lclz:Strings.FlowChartText}"
                                        />
                        <!--状态机-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.StateMachineText}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/state-machine.png"
                                         Command="{Binding NewStateMachineDocumentCommand}"
                                         ToolTip="{x:Static lclz:Strings.StateMachineText}"
                                        />
                        <!--<fluent:MenuItem Header="全局处理器" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/global-handler.png"
                                         Command="{Binding NewGlobalHandlerDocumentCommand}"
                                         ToolTip="全局处理器"
                                        />-->
                    </fluent:DropDownButton>
                    <!--保存-->
                    <fluent:SplitButton x:Name="saveButton" Header="{x:Static lclz:Strings.SaveText}" ToolTip="{x:Static lclz:Strings.SaveToolTip}"
                                        Icon="pack://application:,,,/Resources/Image/Ribbon/save.png"
                                        LargeIcon="pack://application:,,,/Resources/Image/Ribbon/save.png"
                                        Command="{Binding SaveCommand}"
                                        IsEnabled="{Binding IsDocumentExist}"
                                        FocusManager.IsFocusScope="True">
                        <!--另存为-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.SaveAsText}" 
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/save-as.png"
                                         Command="{Binding SaveAsCommand}"
                                        />
                        <!--全部保存-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.SaveAllText}" ToolTip="{x:Static lclz:Strings.SaveAllTooltip}"
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/save-all.png"
                                         Command="{Binding SaveAllCommand}"
                                        />
                    </fluent:SplitButton>
                    <!--<fluent:Button Header="另存为 模板" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/template.png"
                                   />-->
                    <!--运行-->
                    <fluent:Button Header="{x:Static lclz:Strings.RunText}"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/run.png"
                                   Command="{Binding RunWorkflowCommand}"
                                   ToolTip="{x:Static lclz:Strings.RunToolTip}"
                                   />
                </fluent:RibbonGroupBox>
                <!--编辑-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.EditText}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}">
                    <!--剪切-->
                    <fluent:Button Header="{x:Static lclz:Strings.CutText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/cut.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding CutCommand}" CommandTarget="{Binding CurrentDesignerView}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <!--复制-->
                    <fluent:Button Header="{x:Static lclz:Strings.CopyText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/copy.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding CopyCommand}" CommandTarget="{Binding CurrentDesignerView}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <!--粘贴-->
                    <fluent:Button Header="{x:Static lclz:Strings.PasteText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/paste.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding PasteCommand}" CommandTarget="{Binding CurrentDesignerView}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                </fluent:RibbonGroupBox>
                <!--<fluent:RibbonGroupBox Header="选择器">
                    <fluent:Button Header="UI 浏览器" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/ui-explorer.png"
                                   Command="{Binding LaunchUIExplorerCommand}"
                                   ToolTip="运行UI浏览器"
                                   />
                </fluent:RibbonGroupBox>-->
                <!--依赖-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.DependsText}">
                    <!--包管理器-->
                    <fluent:Button Header="{x:Static lclz:Strings.PackageManagerText}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/package-manager.png"
                                   Command="{Binding LaunchPackageManagerCommand}"
                                   ToolTip="{x:Static lclz:Strings.xPackageToolTip}"
                                   />
                </fluent:RibbonGroupBox>
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.xOperation}">
                    <!--录制-->
                    <fluent:Button Header="{x:Static lclz:Strings.xRecord}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/recording.png"
                                   Command="{Binding RecordingCommand}"
                                   ToolTip="{x:Static lclz:Strings.xRecordTip}"
                                   />
                </fluent:RibbonGroupBox>
                <!--能力中心-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.xActivityCenter}">
                    <!--能力商店-->
                    <fluent:Button Header="{x:Static lclz:Strings.xActivityStore}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/store.png"
                                   Command="{Binding StoreCommand}"
                                   ToolTip="{x:Static lclz:Strings.xOpenActivityStore}"
                                   />
                </fluent:RibbonGroupBox>
                <!--部署-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.DeployText}" IsEnabled="{Binding IsWorkflowRunningOrDebugging,Mode=OneWay, Converter={StaticResource BoolNotConverter}}">
                    <!--发布-->
                    <fluent:Button Header="{x:Static lclz:Strings.ReleaseContent}" 
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/publish.png"
                                   Command="{Binding PublishCommand}"
                                   ToolTip="{x:Static lclz:Strings.ReleaseToolTip}"
                                   />
                </fluent:RibbonGroupBox>
            </fluent:RibbonTabItem>
            <!--执行-->
            <fluent:RibbonTabItem Header="{x:Static lclz:Strings.DebugText}">
                <!--启动-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.StartText}">
                    <!--运行-->
                    <fluent:Button Header="{x:Static lclz:Strings.RunText}" x:Name="runButton" 
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/run.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/run.png"
                                   Command="{Binding RunWorkflowCommand}"
                                   ToolTip="{x:Static lclz:Strings.RunToolTip}"
                                   />
                    <!--停止-->
                    <fluent:Button Header="{x:Static lclz:Strings.StopText}" x:Name="stopButton"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/stop.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/stop.png"
                                   Command="{Binding StopWorkflowCommand}"
                                   ToolTip="{x:Static lclz:Strings.StopToolTip}"
                                   />
                    <fluent:Button Header="{Binding DebugOrContinueWorkflowButtonHeader}" 
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/debug.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/debug.png"
                                   Command="{Binding DebugOrContinueWorkflowCommand}"
                                   ToolTip="{Binding DebugOrContinueWorkflowButtonToolTip}"
                                   />
                </fluent:RibbonGroupBox>
                <!--调试-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.Debug2Text}" >
                    <!--中断-->
                    <fluent:Button Header="{x:Static lclz:Strings.BreakText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/break.png"
                                   SizeDefinition="Middle,Small"
                                   Command="{Binding BreakCommand}"
                                   ToolTip="{x:Static lclz:Strings.BreakToolTip}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <!--逐语句-->
                    <fluent:Button Header="{x:Static lclz:Strings.StepInText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/step-into.png"
                                   SizeDefinition="Middle,Small"
                                   ToolTip="{x:Static lclz:Strings.StepInToolTip}"
                                   Command="{Binding StepIntoCommand}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <!--逐过程-->
                    <fluent:Button Header="{x:Static lclz:Strings.StepOverText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/step-over.png"
                                   SizeDefinition="Middle,Small"
                                   ToolTip="{x:Static lclz:Strings.StepOverToolTip}"
                                   Command="{Binding StepOverCommand}"
                                   FocusManager.IsFocusScope="True" >
                    </fluent:Button>
                    <!--校验-->
                    <fluent:Button Header="{x:Static lclz:Strings.VaridateText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/validate.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/validate.png"
                                   ToolTip="{x:Static lclz:Strings.VaridateToolTip}"
                                   Command="{Binding ValidateWorkflowCommand}"
                                   IsEnabled="{Binding IsDocumentExist}"
                                   />
                    <!--断点-->
                    <fluent:SplitButton Header="{x:Static lclz:Strings.BreakPointText}" ToolTip="{x:Static lclz:Strings.BreakPointToolTip}"
                                        Icon="pack://application:,,,/Resources/Image/Ribbon/breakpoints.png"
                                        LargeIcon="pack://application:,,,/Resources/Image/Ribbon/breakpoints.png"
                                        Command="{Binding ToggleBreakpointCommand}"
                                        IsEnabled="{Binding IsDocumentExist}"
                                        FocusManager.IsFocusScope="True">
                        <!--切换断点-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.BreakPoint2Text}"  ToolTip="{x:Static lclz:Strings.BreakPoint2Text}"
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/breakpoints.png"
                                         Command="{Binding ToggleBreakpointCommand}"
                                        />
                        <!--清除所有断点-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.ClearAllBreakPointsText}" ToolTip="{x:Static lclz:Strings.ClearAllBreakPointsToolTip}"
                                         Icon="pack://application:,,,/Resources/Image/Ribbon/remove-all-breakpoints.png"
                                         Command="{Binding RemoveAllBreakpointsCommand}"
                                        />
                    </fluent:SplitButton>
                    <!--慢速 调试-->
                    <fluent:Button Header="{x:Static lclz:Strings.SlowDebugText}"  ToolTip="{x:Static lclz:Strings.SlowDebugToolTip}"
                                   Icon="{Binding SlowStepIcon}"
                                   LargeIcon="{Binding SlowStepIcon}"
                                   Background="{Binding SlowStepBackground}"
                                   Command="{Binding SlowStepCommand}"
                                   IsEnabled="{Binding IsDocumentExist}"
                                   />
                    <!--选项-->
                    <fluent:DropDownButton Header="{x:Static lclz:Strings.OptionText}"
                                           LargeIcon="pack://application:,,,/Resources/Image/Ribbon/options.png"
                                           ToolTip="{x:Static lclz:Strings.OptionText}"
                                           VerticalAlignment="Top">
                        <!--高亮元素-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.HighlightElementText}" IsCheckable="True"
                                         IsChecked="{Binding IsHighlightElements}"
                                        />
                        <!--记录活动-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.RecordActivityText}" IsCheckable="True"
                                         IsChecked="{Binding IsLogActivities}"
                                        />
                        <!--异常时中断-->
                        <fluent:MenuItem Header="{x:Static lclz:Strings.InterruptOnException}" IsCheckable="True"
                                          IsChecked="{Binding IsBreakOnExceptions}"
                                        />
                    </fluent:DropDownButton>
                </fluent:RibbonGroupBox>
                <!--日志-->
                <fluent:RibbonGroupBox Header="{x:Static lclz:Strings.LogText}">
                    <!--打开日志-->
                    <fluent:Button Header="{x:Static lclz:Strings.OpenLogText}"
                                   Icon="pack://application:,,,/Resources/Image/Ribbon/open-logs.png"
                                   LargeIcon="pack://application:,,,/Resources/Image/Ribbon/open-logs.png"
                                   ToolTip="{x:Static lclz:Strings.OpenLogToolTip}"
                                   Command="{Binding OpenLogsCommand}"/>
                </fluent:RibbonGroupBox>
                
            </fluent:RibbonTabItem>
        </fluent:Ribbon>

        <Grid Grid.Row="1" Visibility="{Binding IsOpenStartScreen,Mode=OneWay, Converter={StaticResource BoolNotVisibilityConverter}}">
            <uc:DockContent/>
        </Grid>
        <fluent:StatusBar HorizontalAlignment="Stretch"
                          VerticalAlignment="Bottom"
                          Grid.Row="2">
        </fluent:StatusBar>
    </Grid>
</UserControl>
